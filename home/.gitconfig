[core]
	excludesFile = ~/.gitignore
	autocrlf = input
	safecrlf = false
	editor = nano
	whitespace = cr-at-eol
	hooksPath = ~/git-hooks
	fileMode = false
[alias]
	alias = "!f() { git config --global alias.\"$@\"; }; f"
	puush = !git push -u origin \"$(git symbolic-ref --short HEAD)\"
	nuke = !git reset --hard && git clean -fdx -e _stuff/ -e .vagrant/
	uncommit = reset --soft HEAD~
	recommit = commit -C ORIG_HEAD
	ns = "!f() { git diff --name-status \"${1:-HEAD^..}\"; }; f"
	changelog = log --pretty='format:- %s' --reverse --no-show-signature
	msg = log --format=%s -n1 --no-show-signature
	graph = log --oneline --graph --all --decorate --no-show-signature
	whoami = !printf '%s <%s>\\n' \"$(git config user.name)\" \"$(git config user.email)\"
	bs = !__git-bs.sh
	ch = !__git-ch.sh
	lr = log --oneline --decorate --left-right --no-show-signature
	unpushed = "!bash -c 'set -o pipefail; git rev-parse --abbrev-ref --symbolic-full-name @{u} | xargs -I% git log --oneline --no-show-signature %..'"
	remas = pull origin master
	co-latest = !__git-co-latest.sh
[color]
	ui = auto
[merge]
	tool = code
[merge "npm-merge-driver"]
	name = automatically merge npm lockfiles
	driver = npx npm-merge-driver merge %A %O %B %P
[mergetool]
	prompt = false
	keepBackup = false
	keepTemporaries = false
[mergetool "code"]
	cmd = code --wait $MERGED
[diff]
	tool = code
[difftool "code"]
	cmd = code --diff --wait $LOCAL $REMOTE
[push]
	default = simple
[fetch]
	prune = true
[pull]
	rebase = true
[rebase]
	autoStash = true
[commit]
	gpgSign = true
[gpg]
	program = gpg2
[log]
	showSignature = true
[include]
	path = ~/.gitconfig_local
