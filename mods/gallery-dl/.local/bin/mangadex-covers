#!/bin/bash
set -eo pipefail

if [[ ! $1 =~ ^https://mangadex.org/title/([0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}) ]]; then
  cat >&2 <<EOF
Usage: mangadex-covers <manga url>

Downloads all of the Japanese volume covers for a series.

If no folder.jpg exists in the current directory, volume 1's cover will be
copied to folder.jpg and hidden.

If a directory that ends with "vol. {volume} [mangadex]" exists (i.e. a
gallery-dl download folder) and no "000.*" exists in that directory, the
corresponding cover image will be moved there.
EOF
  exit 1
fi

manga_id=${BASH_REMATCH[1]}

echo 'Fetching cover IDs'
if ! json=$(curl -fsSLg "https://api.mangadex.org/cover?order[volume]=asc&manga[]=${manga_id}&limit=100&offset=0"); then
  echo 'Failed to fetch cover IDs' >&2
  exit 1
fi

images=$(jq -r '
  .data[] |
  select(.type == "cover_art" and .attributes.locale == "ja") |
  "\(.attributes.volume)\t\(.attributes.fileName)"
' <<<"$json")

while IFS=$'\t' read -r volume filename; do
  url="https://mangadex.org/covers/${manga_id}/${filename}"
  dest="vol ${volume}.${filename##*.}"

  echo "Downloading volume $volume cover: $url"
  curl -fsSL "$url" -o "$dest"

  if (( volume == 1 )); then
    if [[ -f folder.jpg ]]; then
      echo 'Not copying to folder.jpg as it already exists'
    else
      echo 'Copying to folder.jpg'
      cp "$dest" 'folder.jpg'
      if command -v wslpath &>/dev/null; then
        attrib.exe +h 'folder.jpg'
      fi
    fi
  fi

  if volume_dir=$(find . -maxdepth 1 -type d -name "* vol. $volume \[mangadex\]" | head -n1 | grep .); then
    if find "$volume_dir" -maxdepth 1 -type f -name '000.*' | grep -q .; then
      echo "Not moving to \"$volume_dir\" because a \"000\" image already exists there"
    else
      volume_dir_dest="$volume_dir/000.${dest##*.}"
      echo "Moving to $volume_dir_dest"
      mv "$dest" "$volume_dir_dest"
    fi
  fi
done <<<"$images"
