#!/bin/bash
#
# Copyright (c) Max Kagamine
# Licensed under the Apache License, Version 2.0
#
set -eo pipefail

# shellcheck source=mods/bash/.local/lib/common.sh
. ~/.local/lib/common.sh

help() {
  cat >&2 <<'EOF'
Usage: mkanimereadme <nyaa link> [<dir>]

Creates a readme.md file in <dir> or the current directory.
EOF
  exit 1
}

# Parse options
nyaa_url=
dir=.

parse_args \
  -h,--help \
  -- "$@"

for x in "${REST[@]}"; do
  case $x in
    https://*nyaa.si/*)
      if [[ ! $x =~ ^https://.*nyaa\.si/view/([[:digit:]]+) ]]; then
        throw 'unrecognized nyaa url'
      fi
      nyaa_url=$x
      ;;
    *)
      if [[ -d $x ]]; then
        dir=$x
      else
        throw "'$x' is neither an Nyaa link nor a directory..."
      fi
      ;;
  esac
done

if [[ ! $nyaa_url ]]; then
  throw 'üê±?'
fi

# Get nyaa info
if ! nyaa_html=$(curl -fsSLk --compressed "$nyaa_url"); then
  throw 'failed to fetch nyaa url'
fi
if ! nyaa_desc=$(grep -Pzo '(?s)(?<=id="torrent-description">).*?(?=</div>)' <<<"$nyaa_html" | tr -d '\0' | html-unescape) ||
   ! nyaa_hash=$(grep -Po '(?<=<kbd>)[0-9a-f]{40}(?=</kbd>)' <<<"$nyaa_html") ||
   ! nyaa_title=$(grep -Po '(?<=<title>).*?(?= :: )' <<<"$nyaa_html" | html-unescape); then
   throw 'failed to parse nyaa html'
fi

# Create readme
output="$dir/readme.md"
cat >"$output" <<EOF
# $nyaa_title

[\`$nyaa_hash\`]($nyaa_url)

## Source description

$nyaa_desc
EOF

echo "Created ${output#./}"
