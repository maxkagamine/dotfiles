#!/bin/bash
set -eo pipefail

UA='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36'

throw() {
  printf '%s: %s\n' "${0##*/}" "$1" >&2
  return 1
}

sanitize_filename() {
  # Replaces chars invalid in Windows file/dir names with a space
  perl -pe 's/[<>:"\/\\|?*]/ /g; s/ +/ /g; s/^ +|[ \.]+$//g' <<<"$1"
}

html_unescape() {
  python3 -c 'import html,sys;print(html.unescape(sys.stdin.read()),end="")'
}

if [[ $# == 0 || $1 =~ ^(--help|-h)$ ]]; then
  cat >&2 <<EOF
Usage: mkmoviedir <imdb link> [<file>]

Creates a directory in the format "Title (Year)" with the poster saved to
folder.jpg (hidden). If the directory already exists but a folder.jpg doesn't,
it'll download the poster only.
EOF
  exit 1
fi

imdb_id=
files=()
while (( $# > 0 )); do
  case $1 in
    https://*)
      if [[ ! $1 =~ ^https://www.imdb.com/title/(tt[[:digit:]]+) ]]; then
        throw 'unrecognized imdb url'
      fi
      imdb_id=${BASH_REMATCH[1]}
      ;;
    *)
      files+=("$1")
      ;;
  esac
  shift
done

if ! html=$(curl -A "$UA" -sSL "https://www.imdb.com/title/$imdb_id/"); then
  throw 'failed to fetch imdb page'
fi

if ! title=$(grep -Po '(?<=<title>).*?(?= - IMDb)' <<<"$html" | head -n1 | html_unescape); then
  throw 'failed to extract title'
fi

if ! image=$(grep -Po '(?<=<meta property="og:image" content=")[^"]+' <<<"$html"); then
  throw 'failed to extract og:image from page'
fi

dir=$(sanitize_filename "$title")

mkdir -pv "$dir"

if [[ -e "$dir/folder.jpg" ]]; then
  echo 'folder.jpg already exists' >&2
else
  curl -A "$UA" -fsSL "$image" -o "$dir/folder.jpg"

  # Hide folder.jpg if on Windows
  if command -v wslpath &>/dev/null; then
    attrib.exe +h "$(wslpath -w "$dir/folder.jpg")"
    echo "Downloaded folder.jpg (and set as hidden)"
  else
    echo "Downloaded folder.jpg"
  fi
fi

mv -v "${files[@]}" "$dir"
