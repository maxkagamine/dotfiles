#!/bin/bash
set -eo pipefail

CURL_OPTS=(
  -A 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36'
  -H 'Accept-Language: en-US,en;q=0.9'
)

throw() {
  printf '%s: %s\n' "${0##*/}" "$1" >&2
  return 1
}

sanitize_filename() {
  # Replaces chars invalid in Windows file/dir names with a space
  perl -pe 's/[<>:"\/\\|?*]/ /g; s/ +/ /g; s/^ +|[ \.]+$//g' <<<"$1"
}

html_unescape() {
  python3 -c 'import html,sys;print(html.unescape(sys.stdin.read()),end="")'
}

if [[ $# == 0 || $1 =~ ^(--help|-h)$ ]]; then
  cat >&2 <<EOF
Usage: mkmoviedir <imdb or mydramalist url> [<file>]

Creates a directory in the format "Title (Year)" with the poster saved to
folder.jpg (hidden). If the directory already exists but a folder.jpg doesn't,
it'll download the poster only.

Works for TV shows too.
EOF
  exit 1
fi

imdb_url=
mdl_url=
files=()
while (( $# > 0 )); do
  case $1 in
    https://www.imdb.com/*)
      if [[ ! $1 =~ ^https://www.imdb.com/title/tt[[:digit:]]+ ]]; then
        throw 'unrecognized imdb url'
      fi
      imdb_url=${BASH_REMATCH[0]}
      ;;
    https://mydramalist.com/*)
      if [[ ! $1 =~ ^https://mydramalist.com/[[:digit:]]+-[^/]+ ]]; then
        throw 'unrecognized mydramalist url'
      fi
      mdl_url=${BASH_REMATCH[0]}
      ;;
    http://*|https://*)
      throw 'unrecognized url'
      ;;
    *)
      files+=("$1")
      ;;
  esac
  shift
done

fetch_data() { # <url> <title suffix>, sets $html, $title, $image
  local url=$1
  local title_suffix=$2

  if ! html=$(curl "${CURL_OPTS[@]}" -sSL "$url"); then
    throw 'failed to fetch page'
  fi

  if ! title=$(grep -Po '(?<=<title>).*?(?='"$title_suffix"')' <<<"$html" | head -n1 | html_unescape); then
    throw 'failed to extract title'
  fi

  if ! image=$(grep -Po '(?<=<meta property="og:image" content=")[^"]+' <<<"$html"); then
    throw 'failed to extract og:image from page'
  fi
}

if [[ $imdb_url ]]; then
  fetch_data "$imdb_url" ' - IMDb'
elif [[ $mdl_url ]]; then
  fetch_data "$mdl_url" ' - MyDramaList'
else
  throw 'need either an imdb url or a mydramalist url'
fi

dir=$(sanitize_filename "$title")

mkdir -pv "$dir"

if [[ -e "$dir/folder.jpg" ]]; then
  echo 'folder.jpg already exists' >&2
else
  curl "${CURL_OPTS[@]}" -fsSL "$image" -o "$dir/folder.jpg"

  # Hide folder.jpg if on Windows
  if command -v wslpath &>/dev/null; then
    attrib.exe +h "$(wslpath -w "$dir/folder.jpg")"
    echo "Downloaded folder.jpg (and set as hidden)"
  else
    echo "Downloaded folder.jpg"
  fi
fi

if (( ${#files[@]} > 0 )); then
  mv -v "${files[@]}" "$dir"
fi
