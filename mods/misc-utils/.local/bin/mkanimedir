#!/bin/bash
#
# Copyright (c) Max Kagamine
# Licensed under the Apache License, Version 2.0
#
set -eo pipefail

# shellcheck source=mods/bash/.local/lib/common.sh
. ~/.local/lib/common.sh

help() {
  cat >&2 <<'EOF'
Usage: mkanimedir <mal link> [<nyaa link>] [<dir>|<files...>]

Creates (or renames) a directory with the anime name and image (as a hidden
folder.jpg) from MAL, moving any given files into it.

If given a nyaa URL, will create a readme.md as well (using mkanimereadme).

Example:
  mkanimedir https://myanimelist.net/anime/6547/Angel_Beats
EOF
  exit 1
}

# Parse options
mal_id=
nyaa_url=
existing_dir=
files=()

parse_args \
  -h,--help \
  -- "$@"

for x in "${REST[@]}"; do
  case $x in
    https://myanimelist.net/*)
      if [[ ! $x =~ ^https://myanimelist.net/anime/([[:digit:]]+) ]]; then
        throw 'unrecognized mal url'
      fi
      mal_id=${BASH_REMATCH[1]}
      ;;
    https://*nyaa.si/*)
      nyaa_url=$x
      ;;
    http://*|https://*)
      throw 'unrecognized url'
      ;;
    *)
      if [[ -d $x ]]; then
        if [[ $existing_dir ]]; then
          throw 'multiple directories given'
        fi
        existing_dir=$x
      elif [[ -f $x ]]; then
        files+=("$x")
      else
        throw "'$x' is neither an option nor a file or directory..."
      fi
      ;;
  esac
done

if [[ ! $mal_id ]]; then
  throw 'no mal url given'
fi

# Get mal info
if ! json=$(curl -sSL "https://api.jikan.moe/v4/anime/$mal_id"); then
  throw 'failed to get mal data from jikan.moe'
fi

title=$(jq -r .data.title <<<"$json")
image=$(jq -r .data.images.jpg.large_image_url <<<"$json")

if [[ ! $title || $title == 'null' ]]; then
  throw "$(printf 'unexpected response from jikan.moe:\n\n%s' "$(jq -C . <<<"$json" 2>/dev/null || echo "$json" || true)")"
fi

# Create or rename directory
base=$(dirname "$existing_dir") # . if empty
dir="$base/$(sanitize-filename -- "$title")"

if [[ ! $existing_dir -ef "$dir" ]]; then
  if [[ -e $dir ]]; then
    throw "a file/directory named '$dir' already exists"
  fi

  if [[ $existing_dir ]]; then
    mv "$existing_dir" "$dir"
    echo "Renamed '$existing_dir' to '$dir'"
  else
    mkdir "$dir"
    echo "Created $dir"
  fi
fi

# Download image
if [[ $image && $image != 'null' ]]; then
  folderjpg="$dir/folder.jpg"
  curl -fsSL "$image" -o "$folderjpg"

  # Hide folder.jpg if on Windows
  if command -v wslpath &>/dev/null; then
    folderjpg_win=$(wslpath -w "$folderjpg")
    attrib.exe +h "$folderjpg_win"
    echo "Downloaded folder.jpg (and set as hidden)"
  else
    echo "Downloaded folder.jpg"
  fi
else
  echo "No folder.jpg was created, as the api did not return an image" >&2
fi

# Create readme
if [[ $nyaa_url ]]; then
  mkanimereadme "$nyaa_url" "$dir"
fi

# Move files into directory
if (( ${#files[@]} > 0 )); then
  mv -t "$dir" "${files[@]}"
  echo "Moved ${#files[@]} files"
fi
