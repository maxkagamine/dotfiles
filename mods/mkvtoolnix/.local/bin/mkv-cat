#!/bin/bash
#
# Copyright (c) Max Kagamine
# Licensed under the Apache License, Version 2.0
#
set -eo pipefail

# shellcheck source=mods/bash/.local/lib/common.sh
. ~/.local/lib/common.sh

help() {
  cat >&2 <<'EOF'
Usage: mkv-cat [--no-sort] <input>... <output>

Concatenates the input MKVs, adding chapters for each file.

Options:

  --no-sort    Concatenate inputs in the order given. By default, input files
               are appended in natural sort order (same as `ls -v`).
EOF
  exit 1
}

run() {
  printf '\n>'
  printf ' %q' "$@"
  printf '\n\n'
  "$@"
}

no_sort=

parse_args \
  --no-sort 'no_sort=1' \
  -h,--help \
  -- "$@"

if (( ${#REST[@]} < 3 )); then
  throw 'need at least two inputs and an output'
fi

inputs=("${REST[@]::${#REST[@]}-1}")
output="${REST[-1]}"

if [[ -e $output ]]; then
  read -rp "Output '$output' already exists. Overwrite? [yN] " yn
  if [[ $yn != [Yy] ]]; then
    exit 1
  fi
fi

if [[ ! $no_sort ]]; then
  list=$(for x in "${inputs[@]}"; do echo "$x"; done | sort -V)
  readarray -t inputs <<<"$list"
fi

args=(
  --generate-chapters 'when-appending'
  --generate-chapters-name-template '<FILE_NAME>'
  -o "$output"
  "${inputs[0]}"
)

for input in "${inputs[@]:1}"; do
  args+=(+ "$input")
done

run mkvmerge "${args[@]}"
