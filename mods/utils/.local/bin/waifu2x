#!/bin/bash
set -eo pipefail
shopt -s nullglob

AUTO_HEIGHT=2160
AUTO_MIN_PERCENT_INCREASE=10

AUTO_THRESHOLD=$(bc -l <<<"x = ${AUTO_HEIGHT} / (1 + (${AUTO_MIN_PERCENT_INCREASE} / 100)); scale=0; x/1")

scale=2
denoise=0
format=png
upscaler=waifu2x

if [[ $WSL_DISTRO_NAME ]]; then
  # Leaving it here for now. Using the Windows binary to take advantage of GPU.
  _SOFTWARE='/mnt/c/Users/max/Downloads/_SOFTWARE'
  PATH="$_SOFTWARE/waifu2x-ncnn-vulkan:$_SOFTWARE/realcugan-ncnn-vulkan:$PATH"
fi

if [[ $# == 0 || $1 =~ ^(--help|-h)$ ]]; then
  cat >&2 <<EOF
Usage: waifu2x [--auto] [-s <scale>] [-n <denoise>] [-f <format>] <image...>

Upscales each image using waifu2x-ncnn-vulkan. Output file is placed in the
same directory with the scale (and, if not default, denoise level) appended to
the filename.

Directories are expanded to png & jpg files (e.g. \`waifu2x --auto .\` to
upscale anything in the current directory <${AUTO_THRESHOLD}px tall).

Options passed to waifu2x:

  -s <scale>      upscale ratio (1/2/4/8/16/32, default=${scale})
  -n <denoise>    denoise level (-1/0/1/2/3, default=${denoise})
  -f <format>     output image format (jpg/png/webp, default=${format})

Additional options:

  --auto          upscales to ${AUTO_HEIGHT}p or better, skipping images that
                  would not be increased by at least ${AUTO_MIN_PERCENT_INCREASE}%

  --cugan         use realcugan-ncnn-vulkan instead
EOF
  exit 1
fi

throw() {
  printf '%s: %s\n' "${0##*/}" "$1" >&2
  return 1
}

run() {
  printf '\n> '
  printf '%q ' "$@"
  printf '\n\n'
  "$@"
}

paths=()
while (( $# > 0 )); do
  case $1 in
    --)
      shift
      paths+=("$@")
      break
      ;;
    # scale
    -s)
      shift
      scale=$1
      ;;
    -s*)
      scale=${1#-s}
      ;;
    --auto)
      scale=auto
      ;;
    # denoise
    -n)
      shift
      denoise=$1
      ;;
    -n*)
      denoise=${1#-n}
      ;;
    # format
    -f)
      shift
      format=$1
      ;;
    -f*)
      format=${1#-f}
      ;;
    # upscaler
    --cugan)
      upscaler=realcugan
      ;;
    -*)
      throw "unknown option: $1"
      ;;
    *)
      if [[ -d $1 ]]; then
        paths+=("$1"/*.{png,jpg,jpeg,PNG,JPG,JPEG})
      else
        paths+=("$1")
      fi
      ;;
  esac
  shift
done

for input in "${paths[@]}"; do

  image_scale=$scale
  if [[ $scale == 'auto' ]]; then
    image_height=$(identify -format '%h' "$input")
    if (( image_height > AUTO_THRESHOLD )); then
      printf '\nSkipping %s (height %s above threshold)\n' "$input" "$image_height"
      continue
    fi
    minimum_scale=$(( (AUTO_HEIGHT + image_height - 1) / image_height ))
    if (( minimum_scale > 16 )); then
      image_scale=32
    elif (( minimum_scale > 8 )); then
      image_scale=16
    elif (( minimum_scale > 4 )); then
      image_scale=8
    elif (( minimum_scale > 2 )); then
      image_scale=4
    else
      image_scale=2
    fi
  fi

  upscale_info="[${image_scale}x"
  if [[ $upscaler != 'waifu2x' ]]; then
    upscale_info+=", $upscaler"
  fi
  if [[ $denoise != 0 ]]; then
    upscale_info+=", denoise ${denoise}"
  fi
  upscale_info+=']'

  cmd="${upscaler}-ncnn-vulkan"
  output="${input%.*} ${upscale_info}.${format}"

  if [[ $WSL_DISTRO_NAME ]]; then
    cmd+='.exe'
    output="$(wslpath -w "$(dirname "$input")")\\$(basename "$output")"
    input=$(wslpath -w "$input")
  fi

  run "$cmd" \
    -s "$image_scale" \
    -n "$denoise" \
    -i "$input" \
    -o "$output" \
    -f "$format"

done
