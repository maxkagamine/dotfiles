#!/bin/bash
# shellcheck disable=SC2016
set -eo pipefail

if [[ $# == 0 || $1 =~ ^(--help|-h)$ ]]; then
  cat >&2 <<EOF
Usage: xsel (--clipboard|-b) (--input|-i|--output|-o)

xsel shim for WSL, redirecting clipboard I/O to PowerShell.
Only handles the options listed above.
EOF
  exit 1
fi

selection=
mode=

for opt; do
  case $opt in
    --clipboard|-b) selection='clipboard' ;;
    --input|-i) mode='copy' ;;
    --output|-o) mode='paste' ;;
    -bi|-ib) selection='clipboard'; mode='copy' ;;
    -bo|-ob) selection='clipboard'; mode='paste' ;;
  esac
done

if [[ $selection != 'clipboard' || ! $mode ]]; then
  echo "xsel shim received unsupported options:$(printf ' %q' "$@")" >&2
  exit 72
fi


case $mode in
  copy)
    # This is absurd, but it's the only way to properly handle Unicode with PowerShell.
    # *Really* need to write a simple xsel.exe to replace this junk.
    powershell.exe -noprofile -command "
      [System.Text.Encoding]::UTF8.GetString(
        [System.Convert]::FromBase64String('$(base64 --wrap=0)')) |
      Set-Clipboard"
    ;;
  paste)
    powershell.exe -noprofile -command '
      [Console]::OutputEncoding = New-Object System.Text.UTF8Encoding;
      Get-Clipboard' | tr -d $'\r'
    ;;
esac
