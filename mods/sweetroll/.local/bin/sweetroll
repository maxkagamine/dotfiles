#!/bin/bash
set -eo pipefail

DATA_DIR=~/.local/share/sweetroll
STATS_FILE="$DATA_DIR/stats.json"
QUOTES_FILE="$DATA_DIR/quotes"
XP_PER_LEVEL=50

available_sounds=$(basename -s .mp3 "$DATA_DIR"/*.mp3 | xargs printf ', %s' | cut -c3-)

if [[ $1 =~ ^(--help|-h)$ ]]; then
  cat >&2 <<EOF
Usage: sweetroll [<exit code>]
       sweetroll play <sound>
       sweetroll skill <name>

[<exit code>]
  Prints a random quote appropriate for the exit code (if any). Sweetroll exits
  with whatever exit code is given.

play <sound>
  Plays the specified mp3 from ${DATA_DIR/$HOME/\~}.
  Available sounds: $available_sounds

skill <name>
  Increases the specified skill XP and plays the level up sound every $XP_PER_LEVEL XP.
EOF
  exit 1
fi

throw() {
  printf 'sweetroll: %s\n' "$1" >&2
  return 1
}

sweetroll_play() { # <sound>
  local path="$DATA_DIR/$1.mp3"
  if [[ ! -f $path ]]; then
    throw "sound does not exist: $path"
  fi
  if command -v cmdmp3.exe &>/dev/null; then
    ( w=$(wslpath -w "$path") && cmdmp3.exe "$w" &>/dev/null & )
  elif command -v ffplay &>/dev/null; then
    ( ffplay -nodisp -autoexit "$path" &>/dev/null & )
  fi
}

sweetroll_skill() { # <name>
  local name value json
  if [[ ! -f $STATS_FILE ]]; then
    echo '{}' > $STATS_FILE
  fi

  name=$1
  value=$(jq -r --arg name "$name" '.["\($name)"]//0' < $STATS_FILE)
  (( value += 1 ))
  json=$(jq --arg name "$name" --arg value "$value" '.*{($name):$value}' "$STATS_FILE")
  echo "$json" > $STATS_FILE

  if (( value % XP_PER_LEVEL == 0 )); then
    level=$(( (value / XP_PER_LEVEL) + 1 ))
    printf '\n  ✨ \e[1m%s increased to %s!\e[m ✨\n\n' "$name" "$level"
    sweetroll_play levelup
  fi
}

sweetroll_quote() { # [<exit code>]
  local flag='+'
  if (( $1 > 0 )); then
    flag='-'
  fi
  grep "^$flag" "$QUOTES_FILE" | cut -c3- | shuf -n1
}

cmd=$1
case $cmd in
  play) sweetroll_play "${@:2}" ;;
  skill) sweetroll_skill "${@:2}" ;;
  [0-9]*|'') sweetroll_quote "${1:-0}" ;;
  *)
    throw "unknown command: $cmd"
esac
